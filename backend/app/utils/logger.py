"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–∏—Ö–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö
"""
import sys
from typing import Optional


class QuietLogger:
    """–¢–∏—Ö–∏–π –ª–æ–≥–≥–µ—Ä - –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ –∏ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    
    def __init__(self, verbose: bool = False):
        self.verbose = verbose
    
    def info(self, message: str):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è - —Ç–æ–ª—å–∫–æ –≤ verbose —Ä–µ–∂–∏–º–µ"""
        if self.verbose:
            print(f"‚ÑπÔ∏è  {message}")
    
    def success(self, message: str):
        """–£—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ - –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º"""
        print(f"‚úÖ {message}")
    
    def warning(self, message: str):
        """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è - –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º"""
        print(f"‚ö†Ô∏è  {message}")
    
    def error(self, message: str):
        """–û—à–∏–±–∫–∏ - –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º –≤ stderr"""
        print(f"‚ùå {message}", file=sys.stderr)
    
    def progress(self, current: int, total: int, message: str = ""):
        """–ü—Ä–æ–≥—Ä–µ—Å—Å - —Ç–æ–ª—å–∫–æ –≤ verbose —Ä–µ–∂–∏–º–µ"""
        if self.verbose:
            percent = (current / total) * 100 if total > 0 else 0
            print(f"üìä {message} {current}/{total} ({percent:.1f}%)")
    
    def step(self, step: str, message: str = ""):
        """–®–∞–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ - —Ç–æ–ª—å–∫–æ –≤ verbose —Ä–µ–∂–∏–º–µ"""
        if self.verbose:
            print(f"üîÑ {step}: {message}")
    
    def section(self, title: str):
        """–ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–π - –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º"""
        print(f"\nüìã {title}")
        print("-" * 50)


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
logger = QuietLogger(verbose=False)


def set_verbose(verbose: bool = True):
    """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥"""
    global logger
    logger.verbose = verbose
