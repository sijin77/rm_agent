"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from fastapi.responses import HTMLResponse

from app.core.config import settings
from app.core.database import create_tables
from app.api import organization, employee, access, role_model
from app.views import role_models, ai_tools, chat

# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title=settings.PROJECT_NAME,
    version=settings.VERSION,
    description="–ò–ò-–∞–≥–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π",
    openapi_tags=[
        {
            "name": "organization",
            "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"
        },
        {
            "name": "employees", 
            "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏"
        },
        {
            "name": "access",
            "description": "–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–æ–≤"
        },
        {
            "name": "role-models",
            "description": "–†–æ–ª–µ–≤—ã–µ –º–æ–¥–µ–ª–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–∏"
        }
    ]
)

# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.mount("/static", StaticFiles(directory="static"), name="static")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(
    organization.router,
    prefix="/api/v1/organization",
    tags=["organization"]
)

app.include_router(
    employee.router,
    prefix="/api/v1/employees", 
    tags=["employees"]
)

app.include_router(
    access.router,
    prefix="/api/v1/access",
    tags=["access"]
)

app.include_router(
    role_model.router,
    prefix="/api/v1/role-models",
    tags=["role-models"]
)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ view —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(
    role_models.router,
    prefix="/role-models",
    tags=["views"]
)

app.include_router(
    ai_tools.router,
    prefix="/api/v1/ai-tools",
    tags=["ai-tools"]
)

app.include_router(
    chat.router,
    prefix="/api/v1/chat",
    tags=["chat"]
)


@app.on_event("startup")
async def startup_event():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ë–î
    await create_tables()
    print(f"üöÄ {settings.PROJECT_NAME} –∑–∞–ø—É—â–µ–Ω!")
    print(f"üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print(f"üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {settings.DATABASE_URL}")


@app.get("/")
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
    from fastapi.responses import RedirectResponse
    return RedirectResponse(url="/role-models/")

@app.get("/test", response_class=HTMLResponse)
async def test_page(request: Request):
    """–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    from fastapi.templating import Jinja2Templates
    templates = Jinja2Templates(directory="backend/templates")
    return templates.TemplateResponse("role_models/list.html", {
        "request": request,
        "role_models": [],  # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∞
        "page_title": "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    })


@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    return {
        "status": "healthy",
        "service": settings.PROJECT_NAME,
        "version": settings.VERSION
    }


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(
        "app.main:app",
        host="0.0.0.0",
        port=8000,
        reload=settings.DEBUG
    )
