"""
üöÄ –ú–ê–°–¢–ï–†-–°–ö–†–ò–ü–¢ –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–• RM AGENT
===================================================

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:
1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
2. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
3. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ —Ä–æ–ª–µ–π
4. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 2000 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (24k+ –∑–∞–ø–∏—Å–µ–π)

–ê–≤—Ç–æ—Ä: –ò—Ä–∏—Å–∫–∞ üíñ
–î–∞—Ç–∞: –î–µ–∫–∞–±—Ä—å 2024
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sys.path.append(str(Path(__file__).parent))

from app.core.database import create_tables
from app.utils import logger


async def setup_complete_database():
    """
    üéØ –ü–û–õ–ù–û–ï –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —ç—Ç–∞–ø—ã —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î –¥–ª—è RM Agent
    """
    
    logger.section("–ü–û–õ–ù–û–ï –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• RM AGENT")
    
    try:
        # ============================================================
        # –≠–¢–ê–ü 1: –°–û–ó–î–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ë–î
        # ============================================================
        logger.step("–≠–¢–ê–ü 1", "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        await create_tables()
        logger.success("–¢–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω—ã")
        
        # ============================================================
        # –≠–¢–ê–ü 2: –°–ü–†–ê–í–û–ß–ù–ò–ö–ò –ò –û–†–ì–ê–ù–ò–ó–ê–¶–ò–û–ù–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê
        # ============================================================
        logger.step("–≠–¢–ê–ü 2", "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ –æ—Ä–≥.—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        from scripts.populate_data import (
            populate_positions, populate_employee_types, populate_team_roles,
            populate_employee_profiles, populate_organizational_structure,
            populate_agile_structure
        )
        
        logger.info("–ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π...")
        await populate_positions()
        
        logger.info("–ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∏–ø—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
        await populate_employee_types()
        
        logger.info("–ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–æ–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö...")
        await populate_team_roles()
        
        logger.info("–ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
        await populate_employee_profiles()
        
        logger.info("–°–æ–∑–¥–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
        await populate_organizational_structure()
        
        logger.info("–°–æ–∑–¥–∞–µ–º Agile —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
        await populate_agile_structure()
        
        logger.success("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # ============================================================
        # –≠–¢–ê–ü 3: –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ï –°–ò–°–¢–ï–ú–´ –ò –†–û–õ–ò
        # ============================================================
        logger.step("–≠–¢–ê–ü 3", "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º...")
        
        from scripts.generate_systems import generate_application_systems
        
        logger.info("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 36 –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ 145 —Ä–æ–ª–µ–π...")
        await generate_application_systems()
        
        logger.success("–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # ============================================================
        # –≠–¢–ê–ü 4: –ë–ê–ó–û–í–´–ï –†–û–õ–ï–í–´–ï –ú–û–î–ï–õ–ò
        # ============================================================
        logger.step("–≠–¢–ê–ü 4", "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π...")
        
        from scripts.create_role_models import create_base_role_models
        
        logger.info("–°–æ–∑–¥–∞–µ–º 5 –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è ML...")
        await create_base_role_models()
        
        logger.success("–ë–∞–∑–æ–≤—ã–µ —Ä–æ–ª–µ–≤—ã–µ –º–æ–¥–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # ============================================================
        # –≠–¢–ê–ü 5: –ì–ï–ù–ï–†–ê–¶–ò–Ø –°–û–¢–†–£–î–ù–ò–ö–û–í
        # ============================================================
        logger.step("–≠–¢–ê–ü 5", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
        
        from scripts.generate_employees import generate_employees
        
        logger.info("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 2000 —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
        await generate_employees()
        
        logger.success("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # ============================================================
        # –≠–¢–ê–ü 6: –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–û–°–¢–£–ü–û–í
        # ============================================================
        logger.step("–≠–¢–ê–ü 6", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
        
        from scripts.generate_employee_accesses import (
            generate_employee_accesses, show_statistics
        )
        
        logger.info("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø—ã —Å –ª–æ–≥–∏–∫–æ–π —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π...")
        logger.info("   ‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç—É–ø—ã –¥–ª—è –≤—Å–µ—Ö")
        logger.info("   ‚Ä¢ –õ–æ–≥–∏—á–Ω—ã–µ –¥–æ—Å—Ç—É–ø—ã –ø–æ –ø—Ä–æ—Ñ–∏–ª—é/–¥–æ–ª–∂–Ω–æ—Å—Ç–∏") 
        logger.info("   ‚Ä¢ –°–ª—É—á–∞–π–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ—Å—Ç—É–ø—ã")
        logger.info("   ‚Ä¢ 5% —à—É–º–∞ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏")
        
        await generate_employee_accesses()
        
        logger.info("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
        await show_statistics()
        
        logger.success("–î–æ—Å—Ç—É–ø—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–æ–∑–¥–∞–Ω—ã")
        
        # ============================================================
        # –§–ò–ù–ê–õ: –£–°–ü–ï–®–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï
        # ============================================================
        logger.section("–ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        
        logger.info("–ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        logger.info("   ‚Ä¢ 2000 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
        logger.info("   ‚Ä¢ 36 –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º")
        logger.info("   ‚Ä¢ 145 —Ä–æ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–∞—Ö")
        logger.info("   ‚Ä¢ 5 –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π")
        logger.info("   ‚Ä¢ ~150k –¥–æ—Å—Ç—É–ø–æ–≤ (75% –∞–≤—Ç–æ + 25% —Ä—É—á–Ω—ã—Ö)")
        logger.info("   ‚Ä¢ –ü–æ–ª–Ω–∞—è –æ—Ä–≥.—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (5 –±–ª–æ–∫–æ–≤)")
        logger.info("   ‚Ä¢ Agile —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (—Ç—Ä–∞–π–±—ã/–ø—Ä–æ–¥—É–∫—Ç—ã/–∫–æ–º–∞–Ω–¥—ã)")
        
        logger.success("–ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å API –∏ –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å ML!")
        logger.info("   –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞: python -m app.main")
        
    except Exception as e:
        logger.error(f"–û–®–ò–ë–ö–ê –ü–†–ò –ó–ê–ü–û–õ–ù–ï–ù–ò–ò –ë–î: {e}")
        logger.warning("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
        raise


if __name__ == "__main__":
    logger.step("–ó–∞–ø—É—Å–∫", "–º–∞—Å—Ç–µ—Ä-—Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î...")
    asyncio.run(setup_complete_database())
