"""
–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è
"""
import asyncio
from app.utils import logger
from app.core.database import AsyncSessionLocal
from app.models import RoleModel, RoleProfile, ProfileAccess


async def create_base_role_models():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π"""
    logger.info("üéØ –°–æ–∑–¥–∞—ë–º –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–µ–≤—ã–µ –º–æ–¥–µ–ª–∏...")
    
    role_models_data = [
        {
            "name": "IT –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
            "description": "–ë–∞–∑–æ–≤–∞—è —Ä–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ü–û",
            "author": "–°–∏—Å—Ç–µ–º–∞",
            "profiles": [
                {
                    "name": "Java Backend Developer",
                    "criteria": {
                        "employee_profiles": ["Java Developer", "Backend Developer", "Fullstack Developer"],
                        "positions": ["–ò–Ω–∂–µ–Ω–µ—Ä", "–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä", "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–ì–ª–∞–≤–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"],
                        "org_units_type": ["IT"]
                    },
                    "accesses": [
                        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                        {"system_name": "GitLab", "roles": ["Developer", "Maintainer"]},
                        {"system_name": "Jira Service Management", "roles": ["Developer", "Reporter"]},
                        {"system_name": "Confluence", "roles": ["Author", "Editor"]},
                        {"system_name": "Jenkins CI/CD", "roles": ["Developer", "Viewer"]},
                        {"system_name": "SonarQube", "roles": ["Developer", "Viewer"]},
                        {"system_name": "Nexus Repository", "roles": ["Developer", "Viewer"]},
                        {"system_name": "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "roles": ["Developer"]},
                    ]
                },
                {
                    "name": "Frontend Developer",
                    "criteria": {
                        "employee_profiles": ["Frontend Developer", "React Developer", "Fullstack Developer"],
                        "positions": ["–ò–Ω–∂–µ–Ω–µ—Ä", "–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä", "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–ì–ª–∞–≤–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"],
                        "org_units_type": ["IT"]
                    },
                    "accesses": [
                        {"system_name": "GitLab", "roles": ["Developer"]},
                        {"system_name": "Jira Service Management", "roles": ["Developer", "Reporter"]},
                        {"system_name": "Confluence", "roles": ["Author", "Editor"]},
                        {"system_name": "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "roles": ["Developer"]},
                    ]
                }
            ]
        },
        {
            "name": "DevOps –ò–Ω–∂–µ–Ω–µ—Ä",
            "description": "–†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
            "author": "–°–∏—Å—Ç–µ–º–∞",
            "profiles": [
                {
                    "name": "DevOps Engineer",
                    "criteria": {
                        "employee_profiles": ["DevOps Engineer", "System Administrator"],
                        "positions": ["–ò–Ω–∂–µ–Ω–µ—Ä", "–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä", "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–ì–ª–∞–≤–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"],
                        "org_units_type": ["IT"]
                    },
                    "accesses": [
                        {"system_name": "GitLab", "roles": ["Maintainer", "Developer"]},
                        {"system_name": "Jenkins CI/CD", "roles": ["Build Engineer", "Developer"]},
                        {"system_name": "Kubernetes Dashboard", "roles": ["DevOps Engineer", "Viewer"]},
                        {"system_name": "Zabbix Monitoring", "roles": ["DevOps Engineer", "Viewer"]},
                        {"system_name": "Grafana", "roles": ["Dashboard Editor", "Viewer"]},
                        {"system_name": "VPN –°–∏—Å—Ç–µ–º–∞", "roles": ["Network Engineer", "VPN User"]},
                        {"system_name": "–°–∏—Å—Ç–µ–º–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è", "roles": ["Backup Operator"]},
                    ]
                }
            ]
        },
        {
            "name": "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä",
            "description": "–†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏",
            "author": "–°–∏—Å—Ç–µ–º–∞",
            "profiles": [
                {
                    "name": "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä",
                    "criteria": {
                        "employee_profiles": ["–ë—É—Ö–≥–∞–ª—Ç–µ—Ä", "–ì–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä"],
                        "positions": ["–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–ì–ª–∞–≤–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–≠–∫—Å–ø–µ—Ä—Ç"],
                        "org_units_type": ["Business"]
                    },
                    "accesses": [
                        {"system_name": "1–°:ERP –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ–º", "roles": ["–ë—É—Ö–≥–∞–ª—Ç–µ—Ä", "–ì–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä"]},
                        {"system_name": "SAP ERP", "roles": ["–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä", "–ö–æ–Ω–µ—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"]},
                        {"system_name": "–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏", "roles": ["HR –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫"]},
                        {"system_name": "Self-Service –ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏", "roles": ["–ë—É—Ö–≥–∞–ª—Ç–µ—Ä", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]},
                    ]
                }
            ]
        },
        {
            "name": "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥–∞–∂",
            "description": "–†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º",
            "author": "–°–∏—Å—Ç–µ–º–∞",
            "profiles": [
                {
                    "name": "Sales Manager",
                    "criteria": {
                        "employee_profiles": ["–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–¥–∞–∂"],
                        "positions": ["–ú–µ–Ω–µ–¥–∂–µ—Ä", "–ì–ª–∞–≤–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–≠–∫—Å–ø–µ—Ä—Ç"],
                        "org_units_type": ["Business"]
                    },
                    "accesses": [
                        {"system_name": "CRM –°–∏—Å—Ç–µ–º–∞", "roles": ["–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥–∞–∂", "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂"]},
                        {"system_name": "1–°:ERP –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ–º", "roles": ["–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥–∞–∂", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"]},
                        {"system_name": "–ü–æ—Ä—Ç–∞–ª –æ—Ç—á–µ—Ç–æ–≤", "roles": ["–ú–µ–Ω–µ–¥–∂–µ—Ä", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"]},
                    ]
                }
            ]
        },
        {
            "name": "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫",
            "description": "–ë–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç—É–ø—ã –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
            "author": "–°–∏—Å—Ç–µ–º–∞",
            "profiles": [
                {
                    "name": "–ë–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç—É–ø—ã",
                    "criteria": {
                        "employee_types": ["–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫", "–ê—É—Ç—Å—Ç–∞—Ñ—Ñ–µ—Ä", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞"],
                        "all_employees": True
                    },
                    "accesses": [
                        {"system_name": "Microsoft Office 365", "roles": ["User"]},
                        {"system_name": "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª", "roles": ["–°–æ—Ç—Ä—É–¥–Ω–∏–∫"]},
                        {"system_name": "–°–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ã—Ö", "roles": ["–°–æ—Ç—Ä—É–¥–Ω–∏–∫"]},
                        {"system_name": "–°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π", "roles": ["–£—á–∞—Å—Ç–Ω–∏–∫"]},
                        {"system_name": "Active Directory", "roles": ["Domain User"]},
                    ]
                }
            ]
        }
    ]
    
    async with AsyncSessionLocal() as session:
        role_model_id = 1
        profile_id = 1
        profile_access_id = 1
        
        for rm_data in role_models_data:
            # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–µ–≤—É—é –º–æ–¥–µ–ª—å
            role_model = RoleModel(
                id=role_model_id,
                name=rm_data["name"],
                description=rm_data["description"],
                author=rm_data["author"],
                version="1.0",
                is_active=True
            )
            session.add(role_model)
            
            logger.info("üìã –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å: {rm_data['name']}")
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –º–æ–¥–µ–ª–∏
            for profile_data in rm_data["profiles"]:
                role_profile = RoleProfile(
                    id=profile_id,
                    role_model_id=role_model_id,
                    name=profile_data["name"],
                    criteria=profile_data["criteria"],
                    description=f"–ü—Ä–æ—Ñ–∏–ª—å –¥–ª—è {profile_data['name']}"
                )
                session.add(role_profile)
                
                logger.info("  üë§ –ü—Ä–æ—Ñ–∏–ª—å: {profile_data['name']} ({len(profile_data['accesses'])} –¥–æ—Å—Ç—É–ø–æ–≤)")
                
                # –°–æ–∑–¥–∞–µ–º –¥–æ—Å—Ç—É–ø—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
                for access_data in profile_data["accesses"]:
                    for role_name in access_data["roles"]:
                        # –ù–∞–π–¥–µ–º access_id –ø–æ —Å–∏—Å—Ç–µ–º–µ –∏ —Ä–æ–ª–∏
                        # –ü–æ–∫–∞ —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–≥–ª—É—à–∫–∏, –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ ID
                        profile_access = ProfileAccess(
                            id=profile_access_id,
                            role_profile_id=profile_id,
                            access_id=1,  # –ó–∞–≥–ª—É—à–∫–∞, –æ–±–Ω–æ–≤–∏–º –ø–æ–∑–∂–µ
                            system_name=access_data["system_name"],
                            role_name=role_name
                        )
                        session.add(profile_access)
                        profile_access_id += 1
                
                profile_id += 1
            
            role_model_id += 1
        
        await session.commit()
        
        logger.info("\nüéâ –°–æ–∑–¥–∞–Ω–æ {len(role_models_data)} —Ä–æ–ª–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π!")
        logger.info("üìä –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {profile_id - 1}")
        logger.info("üîë –í—Å–µ–≥–æ —Å–≤—è–∑–µ–π –¥–æ—Å—Ç—É–ø–æ–≤: {profile_access_id - 1}")


async def update_profile_access_ids():
    """–û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ access_id –≤ ProfileAccess"""
    logger.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º ID –¥–æ—Å—Ç—É–ø–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö...")
    
    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ ProfileAccess —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏
        from sqlalchemy import select, update
        from app.models import Access, ApplicationSystem
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ ProfileAccess
        profile_accesses_result = await session.execute(
            select(ProfileAccess).where(ProfileAccess.access_id == 1)
        )
        profile_accesses = profile_accesses_result.scalars().all()
        
        updated_count = 0
        for pa in profile_accesses:
            # –ù–∞–π–¥–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π access_id
            access_result = await session.execute(
                select(Access.id)
                .join(ApplicationSystem)
                .where(
                    ApplicationSystem.name == pa.system_name,
                    Access.role_name == pa.role_name
                )
            )
            access_id = access_result.scalar_one_or_none()
            
            if access_id:
                pa.access_id = access_id
                updated_count += 1
            else:
                logger.info("‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –¥–æ—Å—Ç—É–ø: {pa.system_name} - {pa.role_name}")
        
        await session.commit()
        logger.info("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Å–≤—è–∑–µ–π –¥–æ—Å—Ç—É–ø–æ–≤")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await create_base_role_models()
    await update_profile_access_ids()


if __name__ == "__main__":
    asyncio.run(main())
