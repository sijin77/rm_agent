"""
üóëÔ∏è –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•
=============================

–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.

–ê–≤—Ç–æ—Ä: –ò—Ä–∏—Å–∫–∞ üíñ
"""
from app.utils import logger

import os
from pathlib import Path

def reset_database():
    """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite"""
    
    db_path = Path("data/rm_agent.db")
    
    if db_path.exists():
        try:
            os.remove(db_path)
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞:", db_path)
            logger.info("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python setup_database.py")
        except Exception as e:
            logger.info("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ë–î: {e}")
    else:
        print("‚ÑπÔ∏è –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω:", db_path)
        logger.info("üöÄ –ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∑–∞–ø—É—Å—Ç–∏—Ç—å: python setup_database.py")

if __name__ == "__main__":
    logger.info("üóëÔ∏è –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö RM Agent...")
    reset_database()
